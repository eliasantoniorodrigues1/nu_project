{
  "snow_flake_tables": [
    {
      "d_month": "CREATE TABLE IF NOT EXISTS  d_month (month_id bigint primary key, action_month bigint);"
    },
    {
      "d_week": "CREATE TABLE IF NOT EXISTS  d_week (week_id bigint primary key, action_week bigint);"
    },
    {
      "d_weekday": "CREATE TABLE IF NOT EXISTS  d_weekday (weekday_id bigint primary key, action_weekday varchar(128));"
    },
    {
      "d_year": "CREATE TABLE IF NOT EXISTS  d_year (year_id bigint primary key, action_year bigint);"
    },
    {
      "d_time": "CREATE TABLE IF NOT EXISTS  d_time(time_id bigint primary key, action_timestamp datetime, week_id bigint, foreign key (week_id) references d_week(week_id), month_id bigint, foreign key (month_id) references d_month(month_id), year_id bigint, foreign key (year_id) references d_year(year_id), weekday_id bigint, foreign key (weekday_id) references d_weekday(weekday_id));"
    },
    {
      "country": "CREATE TABLE IF NOT EXISTS country (country_id bigint primary key, country varchar(128));"
    },
    {
      "state": "CREATE TABLE IF NOT EXISTS  state (state_id bigint primary key, state varchar(128), country_id bigint, foreign key(country_id) references country(country_id));"
    },
    {
      "city": "CREATE TABLE IF NOT EXISTS  city (city_id bigint primary key, city varchar(256), state_id bigint, foreign key(state_id) references state(state_id));"
    },
    {
      "customers": "CREATE TABLE IF NOT EXISTS  customers (customer_id bigint primary key, first_name varchar(128), last_name varchar(128), customer_city bigint, foreign key (customer_city) references city (city_id),country_name varchar(128), cpf bigint);"
    },
    {
      "accounts": "CREATE TABLE IF NOT EXISTS  accounts (account_id bigint primary key, customer_id bigint, foreign key(customer_id) references customers(customer_id), created_at datetime, status varchar(128), account_branch varchar(128), account_check_digit varchar(128), account_number varchar(128));"
    },
    {
      "transfer_ins": "CREATE TABLE IF NOT EXISTS  transfer_ins (id bigint primary key, account_id bigint, foreign key(account_id) references accounts(account_id), amount float, transaction_requested_at bigint, foreign key (transaction_requested_at) references d_time(time_id), transaction_completed_at bigint, status varchar(128));"
    },
    {
      "transfer_outs": "CREATE TABLE IF NOT EXISTS  transfer_outs (id bigint primary key, account_id bigint, foreign key(account_id) references accounts(account_id), amount float, transaction_requested_at bigint, foreign key (transaction_requested_at) references d_time(time_id), transaction_completed_at bigint, status varchar(128));"
    },
    {
      "pix_movements": "CREATE TABLE IF NOT EXISTS  pix_movements (id bigint primary key, account_id bigint, foreign key(account_id) references accounts(account_id), in_or_out varchar(128), pix_amount float, pix_requested_at bigint, foreign key (pix_requested_at) references d_time(time_id), pix_completed_at bigint, status varchar(128));"
    },
    {
      "investments": "CREATE TABLE IF NOT EXISTS  investments (transaction_id bigint primary key, account_id bigint, foreign key(account_id) references accounts(account_id), type varchar(128), amount float, investment_requested_at bigint, foreign key (investment_requested_at) references d_time(time_id), investment_completed_at bigint, investment_completed_at_timestamp datetime, status varchar(128));"
    }
  ],
  "star_schema_tables": [
    {
      "d_calendar": "CREATE TABLE IF NOT EXISTS d_calendar (date_id bigint primary key, timestamp_date datetime, date datetime, year int, month int, week_number int, week_day int);"
    },
    {
      "d_region": "CREATE TABLE IF NOT EXISTS d_region (city_id bigint primary key, state varchar(5), country varchar(50));"
    },
    {
      "d_customers": "CREATE TABLE IF NOT EXISTS d_customer (customer_id bigint primary key, cpf bigint unique, customer varchar(128), account_number bigint, account_branch int, account_check_digit int, created_at datetime, status varchar(60));"
    },
    {
      "d_type_moviment": "CREATE TABLE IF NOT EXISTS d_type_moviment (type_moviment_id int primary key, type_moviment varchar(60));"
    },
    {
      "d_status_transaction": "CREATE TABLE IF NOT EXISTS d_status_transaction (status_id int primary key, status varchar(60));"
    },
    {
      "f_transaction": "CREATE TABLE IF NOT EXISTS f_transactions (transaction_id bigint primary key, account_id bigint, customer_id bigint, foreign key (customer_id) references d_customer (customer_id), city_id bigint, foreign key (city_id) references d_region (city_id), date_id bigint, foreign key (date_id) references d_calendar (date_id), status_id int, foreign key (status_id) references d_status_transaction (status_id), type_moviment_id int, foreign key (type_moviment_id) references d_type_moviment (type_moviment_id), amount numeric);"
    }
  ],
  "convert_to_datetime": [
    "created_at",
    "action_timestamp"
  ]
}